version: '3.9'

services:
  app:
    build: .
    ports:
      - "${APP_PORT}:8080"  # HTTP API
      - "${GRPC_PORT}:3000"  # gRPC
      - "${METRICS_PORT}:9000"  # Prometheus
    depends_on:
      db:
#        «Запусти мой сервис (app) только после того,
#  как сервис postgres станет healthy, т.е. пройдет healthcheck.»
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSL_MODE=${DB_SSL_MODE}
      - APP_ENV=${APP_ENV}
    restart: unless-stopped

  db:
    image: postgres:14
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
#   healthcheck Это позволит app дождаться, пока база готова принимать соединения
#  — а не просто запущена.
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}" ]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  pgdata: